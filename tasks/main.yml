---
- name: Install Packages
  package:
    name: "{{ item }}"
    state: latest
  with_items:
    - tftp-server
    - syslinux

- name: Enable tftp
  lineinfile:
    path: /etc/xinetd.d/tftp
    regexp: 'disable\s+= (yes|no)'
    line: "{{'\t'}}disable = no"

- name: TFTP firewall rule
  firewalld:
    port: 69/udp
    permanent: true
    state: enabled

- name: Check if syslinux files copied
  stat:
    path: "/var/lib/tftpboot/pxelinux.0"
  register: stat_result

- name: Copy syslinux files to root
  shell: cp -r /usr/share/syslinux/* /var/lib/tftpboot/
  when: stat_result.stat.exists == False

- name: Check if cfg directory exists
  stat:
    path: "/var/lib/tftpboot/pxelinux.cfg"
  register: stat_result_cfg

- name: Create cfg directory
  file:
    path: "/var/lib/tftpboot/pxelinux.cfg"
    state: directory
    mode: 0755

- name: Copy config
  template:
    src: default.j2
    dest: /var/lib/tftpboot/pxelinux.cfg/default

- name: Create directory
  file:
    path: "/var/lib/tftpboot/{{ pxe_distro_name }}"
    state: directory
    mode: 0755

- name: Check for initrd
  stat:
    path: "/var/lib/tftpboot/{{ pxe_distro_name }}/initrd.img"
  register: stat_result_initrd

- name: download initrd
  get_url:
    url: "{{ pxe_root }}/initrd.img"
    dest: "/var/lib/tftpboot/{{ pxe_distro_name }}/initrd.img"
    mode: 0440
  when: stat_result_initrd.stat.exists == False

- name: Check for vmlinuz
  stat:
    path: "/var/lib/tftpboot/{{ pxe_distro_name }}/vmlinuz"
  register: stat_result_vmlinuz

- name: download vmlinuz
  get_url:
    url: "{{ pxe_root }}/vmlinuz"
    dest: "/var/lib/tftpboot/{{ pxe_distro_name }}/vmlinuz"
    mode: 0440
  when: stat_result_vmlinuz.stat.exists == False
