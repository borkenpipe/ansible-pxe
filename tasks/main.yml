---
- name: Install Packages
  package:
    name: syslinux
    state: latest

- name: Set root path (debian)
  shell: echo "/srv/tftp"
  register: pxe_root_path
  when: ansible_distribution == 'Debian' and pxe_root_path == ''
  changed_when: False

- name: Set root path (non-debian)
  shell: echo "/var/lib/tftpboot"
  register: pxe_root_path
  when: ansible_distribution != 'Debian' and pxe_root_path == ''
  changed_when: False

- name: Create root directory
  file:
    path: "{{ pxe_root_path }}"
    state: directory
    mode: 0755

- name: Check if syslinux files present
  stat:
    path: "{{ pxe_root_path }}/pxelinux.0"
  register: stat_result

- name: Download and extract debian netboot (syslinux-common has this, but this is compact and intended for netboot)
  unarchive:
    src: "{{ pxe_syslinux_archive_url }}"
    dest: "{{ pxe_root_path }}"
    remote_src: True
  when: ansible_distribution == 'Debian'

- name: Copy syslinux files to root
  shell: cp -r "{{ pxe_syslinux_root }}/*" "{{ pxe_root_path }}"
  when: stat_result.stat.exists == False and ansible_distribution != 'Debian'

- name: Create cfg directory
  file:
    path: "{{ pxe_root_path }}/pxelinux.cfg"
    state: directory
    mode: 0755

- name: Copy config
  template:
    src: default.j2
    dest: "{{ pxe_root_path }}/pxelinux.cfg/{{ pxe_config_name }}"

- include: populate.yml
  vars:
    path: "{{ pxe_images_path }}/{{ item.name }}/{{ item.arch }}"
  with_items:
    - "{{ pxe_images }}"
